{"version":3,"sources":["spotify.js","Login.js","SidebarOption.js","DataLayer.js","Sidebar.js","Header.js","SongRow.js","Body.js","Footer.js","Player.js","App.js","serviceWorker.js","reducer.js","index.js"],"names":["loginUrl","join","Login","className","src","alt","href","SidebarOption","title","Icon","DataLayerContext","createContext","DataLayer","initialState","reducer","children","Provider","value","useReducer","useDataLayerValue","useContext","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","items","map","playlist","name","Header","user","token","placeholder","type","Avatar","images","url","display_name","SongRow","track","album","artists","artist","Body","spotify","discover_weekly","description","fontSize","tracks","item","Footer","Grid","container","spacing","xs","Slider","Player","SpotifyWebApi","App","dispatch","useEffect","hash","window","location","substring","split","reduce","initial","parts","decodeURIComponent","_token","access_token","setAccessToken","getUserPlaylists","then","getMe","getPlaylist","response","Boolean","hostname","match","state","action","ReactDOM","render","StrictMode","playing","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.3bf08f18.chunk.js","sourcesContent":["// https://developer.spotify.com/documentation/web-playback-sdk/quick-start/#\r\n\r\nexport const authEndpoint = \"https://accounts.spotify.com/authorize\";\r\n\r\nconst redirectUri = \"https://spotify-clone-app-ameen.netlify.app/callback/\";\r\nconst clientId = \"736a89aae46e4d7ab13fdb9f1d695238\";\r\n\r\nconst scopes = [\r\n  \"user-read-currently-playing\",\r\n  \"user-read-recently-played\",\r\n  \"user-read-playback-state\",\r\n  \"user-top-read\",\r\n  \"user-modify-playback-state\",\r\n  \"playlist-read-private\",\r\n  \"playlist-read-collaborative\"\r\n];\r\n\r\nexport const getTokenFromUrl = () => {\r\n  return window.location.hash\r\n    .substring(1)\r\n    .split(\"&\")\r\n    .reduce((initial, item) => {\r\n      let parts = item.split(\"=\");\r\n      initial[parts[0]] = decodeURIComponent(parts[1]);\r\n\r\n      return initial;\r\n    }, {});\r\n};\r\n\r\nexport const loginUrl = `${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n  \"%20\"\r\n)}&response_type=token&show_dialog=true`;\r\n","import React from 'react';\r\n\r\nimport \"./Login.css\";\r\nimport { loginUrl } from './spotify';\r\n\r\nfunction Login() {\r\n    return (\r\n        <div className=\"login\">\r\n            <img src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\" alt=\"spotify\" /> \r\n            <a href={loginUrl}>LOGIN WITH SPOTIFY</a>\r\n            {/* login with spotify button */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","import React from \"react\";\r\n\r\nimport \"./SidebarOption.css\";\r\n\r\nfunction SidebarOption({ title, Icon }) {\r\n  return (\r\n    <div className=\"sidebarOption\">\r\n      {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n      {Icon ? <h4>{title}</h4> : <p>{title}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarOption;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from \"react\";\r\nimport PlayCircleFilledIcon from \"@material-ui/icons/PlayCircleFilled\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\n\r\nimport \"./Sidebar.css\";\r\nimport SidebarOption from \"./SidebarOption\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\nfunction Sidebar() {\r\n  const [{ playlists }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        className=\"sidebar__logo\"\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"spotify\"\r\n      />\r\n      <SidebarOption Icon={HomeIcon} title=\"Home\" />\r\n      <SidebarOption Icon={SearchIcon} title=\"Search\" />\r\n      <SidebarOption Icon={LibraryMusicIcon} title=\"Your Library\" />\r\n\r\n      <br />\r\n      <strong className=\"sidebar__title\">PLAYLIST</strong>\r\n      <hr />\r\n\r\n      {playlists?.items?.map((playlist) => (\r\n        <SidebarOption title={playlist.name} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { Avatar } from '@material-ui/core';\r\n\r\nimport \"./Header.css\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\n\r\n\r\nfunction Header() {\r\n    const [{ user, token }, dispatch] = useDataLayerValue();\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__left\">\r\n                <SearchIcon />\r\n                <input placeholder=\"Search for Artists, Songs, or podcasts. \"\r\n                type=\"text\" />\r\n            </div>\r\n            <div className=\"header__right\">\r\n                <Avatar src={user?.images[0]?.url} alt={user?.display_name} />\r\n                <h4>{user?.display_name}</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nimport \"./SongRow.css\";\r\n\r\nfunction SongRow({track}) {\r\n    return (\r\n        <div className=\"songRow\">\r\n            <img className=\"songRow__album\" src={track.album.images[0].url} alt=\"\"/>\r\n            <div className=\"songRow__info\">\r\n                <h1>\r\n                    {track.name}\r\n                </h1>\r\n                <p>\r\n                    {track.artists.map(artist => artist.name).join(\", \")} - {\" \"}\r\n                    {track.album.name}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SongRow\r\n","import React from \"react\";\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\n\r\nimport \"./Body.css\";\r\nimport Header from \"./Header\";\r\nimport { useDataLayerValue } from \"./DataLayer\";\r\nimport SongRow from \"./SongRow\";\r\n\r\nfunction Body({spotify}) {\r\n  const [{ discover_weekly }, dispatch] = useDataLayerValue();\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <Header spotify={spotify} />\r\n      <div className=\"body__info\">\r\n      {discover_weekly?.images[0].url ? <img src={discover_weekly?.images[0].url} alt=\"Discover\" />  : null}\r\n        <div className=\"body__infoText\">\r\n          <strong>PLAYLIST</strong>\r\n          <h2>Discover Weekly</h2>\r\n          <p>{discover_weekly?.description}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"body__songs\">\r\n        <div className=\"body__icons\">\r\n          <PlayCircleFilledIcon className=\"body__shuffle\" />\r\n          <FavoriteIcon fontSize=\"large\" />\r\n          <MoreHorizIcon  />\r\n        </div>\r\n\r\n        {discover_weekly?.tracks.items.map(item => (\r\n          <SongRow track={item.track} />\r\n        ))}\r\n\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\n\r\nimport PlayCircleOutlineIcon from '@material-ui/icons/PlayCircleOutline';\r\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\r\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\r\nimport ShuffleIcon from '@material-ui/icons/Shuffle';\r\nimport RepeatIcon from '@material-ui/icons/Repeat';\r\nimport PlaylistPlayIcon from '@material-ui/icons/PlaylistPlay';\r\nimport VolumeDownIcon from '@material-ui/icons/VolumeDown';\r\n\r\nimport \"./Footer.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"footer\">\r\n      <div className=\"footer__left\">\r\n        <img className=\"footer__albumLogo\" src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcRLYZjfJcEDyxpTL7oWGFf5obxtEMVZPb4sbg&usqp=CAU\" alt=\"\" />\r\n        <div className=\"footer__songInfo\">\r\n          <h4>Yeah!</h4>\r\n          <p>Usher</p>\r\n        </div>  \r\n      </div> \r\n      <div className=\"footer__center\">\r\n        <ShuffleIcon className=\"footer__green\" />\r\n        <SkipPreviousIcon className=\"footer__icon\" />\r\n        <PlayCircleOutlineIcon className=\"footer__icon\" fontSize=\"large\" className=\"footer__icon\" />\r\n        <SkipNextIcon className=\"footer__icon\" className=\"footer__icon\" />\r\n        <RepeatIcon className=\"footer__green\" />\r\n      </div> \r\n      <div className=\"footer__right\">\r\n        <Grid container spacing={2}>\r\n          <Grid item>\r\n            <PlaylistPlayIcon />\r\n          </Grid>\r\n          <Grid item>\r\n            <VolumeDownIcon />\r\n          </Grid>\r\n          <Grid item xs>\r\n            <Slider />\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nimport \"./Player.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Body from \"./Body\";\r\nimport Footer from \"./Footer\";\r\n\r\nfunction Player({spotify}) {\r\n  return (\r\n    <div className=\"player\">\r\n      <div className=\"player__body\">\r\n        <Sidebar />\r\n        <Body spotify={spotify} />\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Player;\r\n","import React, { useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nimport Login from \"./Login\";\nimport \"./App.css\";\nimport { getTokenFromUrl } from \"./spotify\";\nimport Player from \"./Player\";\nimport { useDataLayerValue } from \"./DataLayer\";\n\nconst spotify = new SpotifyWebApi();\n\nfunction App() {\n  const [{token }, dispatch] = useDataLayerValue();\n\n  useEffect(() => {\n    const hash = getTokenFromUrl();\n    window.location.hash = \"\";\n\n    const _token = hash.access_token;\n\n    if (_token) {\n      spotify.setAccessToken(_token);\n      dispatch({\n        type: \"SET_TOKEN\",\n        token: _token,\n      });\n\n\n      spotify.getUserPlaylists().then((playlists) => {\n        dispatch({\n          type: \"SET_PLAYLISTS\",\n          playlists: playlists,\n        });\n      });\n\n      \n      spotify.getMe().then((user) => {\n        dispatch({\n          type: \"SET_USER\",\n          user: user,\n        });\n      });\n\n      spotify.getPlaylist(\"37i9dQZEVXcKLG59RXNt50\").then(response => {\n        dispatch({\n          type: \"SET_DISCOVER_WEEKLY\",\n          discover_weekly: response\n        })\n      })\n      \n    }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      {token ? <Player spotify={spotify} /> : <Login />}\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","export const initialState = {\r\n  user: null,\r\n  playlists: [],\r\n  playing: false,\r\n  item: null,\r\n  // token:\r\n  //   \"BQAmrkPobyX3ohUcfKlXVGRPBIq7vCYVptgqKPsTpga6lKzB0dy8JjyhphBiAE1M8HyQCLQ9vxN8nP-GmwpmH7xNjccek0G4gM6OOEgLDwxJXhfbIItcZdcavkJm05WCAjtshrEPg426m1A4UxjVdVu0fqiKCaXZb-9gmw4LuI3WD0fb\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  // console.log(\"action\",action);\r\n\r\n  switch (action.type) {\r\n    case \"SET_USER\":\r\n      // console.log(action);\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case \"SET_TOKEN\":\r\n      // console.log(action);\r\n      return {\r\n        ...state,\r\n        token: action.token,\r\n      };\r\n    case \"SET_PLAYLISTS\":\r\n      // console.log(action);\r\n      return {\r\n        ...state,\r\n        playlists: action.playlists,\r\n      };\r\n    case \"SET_DISCOVER_WEEKLY\":\r\n      return {\r\n        ...state,\r\n        discover_weekly: action.discover_weekly,\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { DataLayer } from \"./DataLayer\";\nimport reducer, { initialState } from \"./reducer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataLayer initialState={initialState} reducer={reducer}>\n      <App />\n    </DataLayer>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}